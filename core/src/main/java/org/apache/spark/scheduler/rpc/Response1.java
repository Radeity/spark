/**
 * Autogenerated by Thrift Compiler (0.14.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.spark.scheduler.rpc;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.2)", date = "2024-01-26")
public class Response1 implements org.apache.thrift.TBase<Response1, Response1._Fields>, java.io.Serializable, Cloneable, Comparable<Response1> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Response1");

  private static final org.apache.thrift.protocol.TField RES_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("resCode", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MAX_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("maxTime", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField DECISION_FIELD_DESC = new org.apache.thrift.protocol.TField("decision", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField LINK_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("linkTime", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField U_FIELD_DESC = new org.apache.thrift.protocol.TField("u", org.apache.thrift.protocol.TType.DOUBLE, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new Response1StandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new Response1TupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable RESCODE resCode; // required
  public double maxTime; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> decision; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Double>> linkTime; // required
  public double u; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RES_CODE((short)1, "resCode"),
    MAX_TIME((short)2, "maxTime"),
    DECISION((short)3, "decision"),
    LINK_TIME((short)4, "linkTime"),
    U((short)5, "u");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RES_CODE
          return RES_CODE;
        case 2: // MAX_TIME
          return MAX_TIME;
        case 3: // DECISION
          return DECISION;
        case 4: // LINK_TIME
          return LINK_TIME;
        case 5: // U
          return U;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MAXTIME_ISSET_ID = 0;
  private static final int __U_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RES_CODE, new org.apache.thrift.meta_data.FieldMetaData("resCode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.ENUM        , "RESCODE")));
    tmpMap.put(_Fields.MAX_TIME, new org.apache.thrift.meta_data.FieldMetaData("maxTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DECISION, new org.apache.thrift.meta_data.FieldMetaData("decision", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.LINK_TIME, new org.apache.thrift.meta_data.FieldMetaData("linkTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)))));
    tmpMap.put(_Fields.U, new org.apache.thrift.meta_data.FieldMetaData("u", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Response1.class, metaDataMap);
  }

  public Response1() {
  }

  public Response1(
    RESCODE resCode,
    double maxTime,
    java.util.List<java.lang.Integer> decision,
    java.util.List<java.util.List<java.lang.Double>> linkTime,
    double u)
  {
    this();
    this.resCode = resCode;
    this.maxTime = maxTime;
    setMaxTimeIsSet(true);
    this.decision = decision;
    this.linkTime = linkTime;
    this.u = u;
    setUIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Response1(Response1 other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetResCode()) {
      this.resCode = other.resCode;
    }
    this.maxTime = other.maxTime;
    if (other.isSetDecision()) {
      java.util.List<java.lang.Integer> __this__decision = new java.util.ArrayList<java.lang.Integer>(other.decision);
      this.decision = __this__decision;
    }
    if (other.isSetLinkTime()) {
      java.util.List<java.util.List<java.lang.Double>> __this__linkTime = new java.util.ArrayList<java.util.List<java.lang.Double>>(other.linkTime.size());
      for (java.util.List<java.lang.Double> other_element : other.linkTime) {
        java.util.List<java.lang.Double> __this__linkTime_copy = new java.util.ArrayList<java.lang.Double>(other_element);
        __this__linkTime.add(__this__linkTime_copy);
      }
      this.linkTime = __this__linkTime;
    }
    this.u = other.u;
  }

  public Response1 deepCopy() {
    return new Response1(this);
  }

  @Override
  public void clear() {
    this.resCode = null;
    setMaxTimeIsSet(false);
    this.maxTime = 0.0;
    this.decision = null;
    this.linkTime = null;
    setUIsSet(false);
    this.u = 0.0;
  }

  @org.apache.thrift.annotation.Nullable
  public RESCODE getResCode() {
    return this.resCode;
  }

  public Response1 setResCode(@org.apache.thrift.annotation.Nullable RESCODE resCode) {
    this.resCode = resCode;
    return this;
  }

  public void unsetResCode() {
    this.resCode = null;
  }

  /** Returns true if field resCode is set (has been assigned a value) and false otherwise */
  public boolean isSetResCode() {
    return this.resCode != null;
  }

  public void setResCodeIsSet(boolean value) {
    if (!value) {
      this.resCode = null;
    }
  }

  public double getMaxTime() {
    return this.maxTime;
  }

  public Response1 setMaxTime(double maxTime) {
    this.maxTime = maxTime;
    setMaxTimeIsSet(true);
    return this;
  }

  public void unsetMaxTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAXTIME_ISSET_ID);
  }

  /** Returns true if field maxTime is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAXTIME_ISSET_ID);
  }

  public void setMaxTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAXTIME_ISSET_ID, value);
  }

  public int getDecisionSize() {
    return (this.decision == null) ? 0 : this.decision.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Integer> getDecisionIterator() {
    return (this.decision == null) ? null : this.decision.iterator();
  }

  public void addToDecision(int elem) {
    if (this.decision == null) {
      this.decision = new java.util.ArrayList<java.lang.Integer>();
    }
    this.decision.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Integer> getDecision() {
    return this.decision;
  }

  public Response1 setDecision(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> decision) {
    this.decision = decision;
    return this;
  }

  public void unsetDecision() {
    this.decision = null;
  }

  /** Returns true if field decision is set (has been assigned a value) and false otherwise */
  public boolean isSetDecision() {
    return this.decision != null;
  }

  public void setDecisionIsSet(boolean value) {
    if (!value) {
      this.decision = null;
    }
  }

  public int getLinkTimeSize() {
    return (this.linkTime == null) ? 0 : this.linkTime.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.util.List<java.lang.Double>> getLinkTimeIterator() {
    return (this.linkTime == null) ? null : this.linkTime.iterator();
  }

  public void addToLinkTime(java.util.List<java.lang.Double> elem) {
    if (this.linkTime == null) {
      this.linkTime = new java.util.ArrayList<java.util.List<java.lang.Double>>();
    }
    this.linkTime.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.util.List<java.lang.Double>> getLinkTime() {
    return this.linkTime;
  }

  public Response1 setLinkTime(@org.apache.thrift.annotation.Nullable java.util.List<java.util.List<java.lang.Double>> linkTime) {
    this.linkTime = linkTime;
    return this;
  }

  public void unsetLinkTime() {
    this.linkTime = null;
  }

  /** Returns true if field linkTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLinkTime() {
    return this.linkTime != null;
  }

  public void setLinkTimeIsSet(boolean value) {
    if (!value) {
      this.linkTime = null;
    }
  }

  public double getU() {
    return this.u;
  }

  public Response1 setU(double u) {
    this.u = u;
    setUIsSet(true);
    return this;
  }

  public void unsetU() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __U_ISSET_ID);
  }

  /** Returns true if field u is set (has been assigned a value) and false otherwise */
  public boolean isSetU() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __U_ISSET_ID);
  }

  public void setUIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __U_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case RES_CODE:
      if (value == null) {
        unsetResCode();
      } else {
        setResCode((RESCODE)value);
      }
      break;

    case MAX_TIME:
      if (value == null) {
        unsetMaxTime();
      } else {
        setMaxTime((java.lang.Double)value);
      }
      break;

    case DECISION:
      if (value == null) {
        unsetDecision();
      } else {
        setDecision((java.util.List<java.lang.Integer>)value);
      }
      break;

    case LINK_TIME:
      if (value == null) {
        unsetLinkTime();
      } else {
        setLinkTime((java.util.List<java.util.List<java.lang.Double>>)value);
      }
      break;

    case U:
      if (value == null) {
        unsetU();
      } else {
        setU((java.lang.Double)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RES_CODE:
      return getResCode();

    case MAX_TIME:
      return getMaxTime();

    case DECISION:
      return getDecision();

    case LINK_TIME:
      return getLinkTime();

    case U:
      return getU();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RES_CODE:
      return isSetResCode();
    case MAX_TIME:
      return isSetMaxTime();
    case DECISION:
      return isSetDecision();
    case LINK_TIME:
      return isSetLinkTime();
    case U:
      return isSetU();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof Response1)
      return this.equals((Response1)that);
    return false;
  }

  public boolean equals(Response1 that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_resCode = true && this.isSetResCode();
    boolean that_present_resCode = true && that.isSetResCode();
    if (this_present_resCode || that_present_resCode) {
      if (!(this_present_resCode && that_present_resCode))
        return false;
      if (!this.resCode.equals(that.resCode))
        return false;
    }

    boolean this_present_maxTime = true;
    boolean that_present_maxTime = true;
    if (this_present_maxTime || that_present_maxTime) {
      if (!(this_present_maxTime && that_present_maxTime))
        return false;
      if (this.maxTime != that.maxTime)
        return false;
    }

    boolean this_present_decision = true && this.isSetDecision();
    boolean that_present_decision = true && that.isSetDecision();
    if (this_present_decision || that_present_decision) {
      if (!(this_present_decision && that_present_decision))
        return false;
      if (!this.decision.equals(that.decision))
        return false;
    }

    boolean this_present_linkTime = true && this.isSetLinkTime();
    boolean that_present_linkTime = true && that.isSetLinkTime();
    if (this_present_linkTime || that_present_linkTime) {
      if (!(this_present_linkTime && that_present_linkTime))
        return false;
      if (!this.linkTime.equals(that.linkTime))
        return false;
    }

    boolean this_present_u = true;
    boolean that_present_u = true;
    if (this_present_u || that_present_u) {
      if (!(this_present_u && that_present_u))
        return false;
      if (this.u != that.u)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetResCode()) ? 131071 : 524287);
    if (isSetResCode())
      hashCode = hashCode * 8191 + resCode.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(maxTime);

    hashCode = hashCode * 8191 + ((isSetDecision()) ? 131071 : 524287);
    if (isSetDecision())
      hashCode = hashCode * 8191 + decision.hashCode();

    hashCode = hashCode * 8191 + ((isSetLinkTime()) ? 131071 : 524287);
    if (isSetLinkTime())
      hashCode = hashCode * 8191 + linkTime.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(u);

    return hashCode;
  }

  @Override
  public int compareTo(Response1 other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetResCode(), other.isSetResCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resCode, other.resCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMaxTime(), other.isSetMaxTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxTime, other.maxTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDecision(), other.isSetDecision());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDecision()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.decision, other.decision);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLinkTime(), other.isSetLinkTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLinkTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.linkTime, other.linkTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetU(), other.isSetU());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetU()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.u, other.u);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Response1(");
    boolean first = true;

    sb.append("resCode:");
    if (this.resCode == null) {
      sb.append("null");
    } else {
      sb.append(this.resCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxTime:");
    sb.append(this.maxTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("decision:");
    if (this.decision == null) {
      sb.append("null");
    } else {
      sb.append(this.decision);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("linkTime:");
    if (this.linkTime == null) {
      sb.append("null");
    } else {
      sb.append(this.linkTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("u:");
    sb.append(this.u);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (resCode == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'resCode' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'maxTime' because it's a primitive and you chose the non-beans generator.
    if (decision == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'decision' was not present! Struct: " + toString());
    }
    if (linkTime == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'linkTime' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'u' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class Response1StandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public Response1StandardScheme getScheme() {
      return new Response1StandardScheme();
    }
  }

  private static class Response1StandardScheme extends org.apache.thrift.scheme.StandardScheme<Response1> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Response1 struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RES_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.resCode = org.apache.spark.scheduler.rpc.RESCODE.findByValue(iprot.readI32());
              struct.setResCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MAX_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.maxTime = iprot.readDouble();
              struct.setMaxTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DECISION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list72 = iprot.readListBegin();
                struct.decision = new java.util.ArrayList<java.lang.Integer>(_list72.size);
                int _elem73;
                for (int _i74 = 0; _i74 < _list72.size; ++_i74)
                {
                  _elem73 = iprot.readI32();
                  struct.decision.add(_elem73);
                }
                iprot.readListEnd();
              }
              struct.setDecisionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LINK_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list75 = iprot.readListBegin();
                struct.linkTime = new java.util.ArrayList<java.util.List<java.lang.Double>>(_list75.size);
                @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> _elem76;
                for (int _i77 = 0; _i77 < _list75.size; ++_i77)
                {
                  {
                    org.apache.thrift.protocol.TList _list78 = iprot.readListBegin();
                    _elem76 = new java.util.ArrayList<java.lang.Double>(_list78.size);
                    double _elem79;
                    for (int _i80 = 0; _i80 < _list78.size; ++_i80)
                    {
                      _elem79 = iprot.readDouble();
                      _elem76.add(_elem79);
                    }
                    iprot.readListEnd();
                  }
                  struct.linkTime.add(_elem76);
                }
                iprot.readListEnd();
              }
              struct.setLinkTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // U
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.u = iprot.readDouble();
              struct.setUIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetMaxTime()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'maxTime' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetU()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'u' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Response1 struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.resCode != null) {
        oprot.writeFieldBegin(RES_CODE_FIELD_DESC);
        oprot.writeI32(struct.resCode.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MAX_TIME_FIELD_DESC);
      oprot.writeDouble(struct.maxTime);
      oprot.writeFieldEnd();
      if (struct.decision != null) {
        oprot.writeFieldBegin(DECISION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.decision.size()));
          for (int _iter81 : struct.decision)
          {
            oprot.writeI32(_iter81);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.linkTime != null) {
        oprot.writeFieldBegin(LINK_TIME_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.linkTime.size()));
          for (java.util.List<java.lang.Double> _iter82 : struct.linkTime)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, _iter82.size()));
              for (double _iter83 : _iter82)
              {
                oprot.writeDouble(_iter83);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(U_FIELD_DESC);
      oprot.writeDouble(struct.u);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class Response1TupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public Response1TupleScheme getScheme() {
      return new Response1TupleScheme();
    }
  }

  private static class Response1TupleScheme extends org.apache.thrift.scheme.TupleScheme<Response1> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Response1 struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.resCode.getValue());
      oprot.writeDouble(struct.maxTime);
      {
        oprot.writeI32(struct.decision.size());
        for (int _iter84 : struct.decision)
        {
          oprot.writeI32(_iter84);
        }
      }
      {
        oprot.writeI32(struct.linkTime.size());
        for (java.util.List<java.lang.Double> _iter85 : struct.linkTime)
        {
          {
            oprot.writeI32(_iter85.size());
            for (double _iter86 : _iter85)
            {
              oprot.writeDouble(_iter86);
            }
          }
        }
      }
      oprot.writeDouble(struct.u);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Response1 struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.resCode = org.apache.spark.scheduler.rpc.RESCODE.findByValue(iprot.readI32());
      struct.setResCodeIsSet(true);
      struct.maxTime = iprot.readDouble();
      struct.setMaxTimeIsSet(true);
      {
        org.apache.thrift.protocol.TList _list87 = iprot.readListBegin(org.apache.thrift.protocol.TType.I32);
        struct.decision = new java.util.ArrayList<java.lang.Integer>(_list87.size);
        int _elem88;
        for (int _i89 = 0; _i89 < _list87.size; ++_i89)
        {
          _elem88 = iprot.readI32();
          struct.decision.add(_elem88);
        }
      }
      struct.setDecisionIsSet(true);
      {
        org.apache.thrift.protocol.TList _list90 = iprot.readListBegin(org.apache.thrift.protocol.TType.LIST);
        struct.linkTime = new java.util.ArrayList<java.util.List<java.lang.Double>>(_list90.size);
        @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> _elem91;
        for (int _i92 = 0; _i92 < _list90.size; ++_i92)
        {
          {
            org.apache.thrift.protocol.TList _list93 = iprot.readListBegin(org.apache.thrift.protocol.TType.DOUBLE);
            _elem91 = new java.util.ArrayList<java.lang.Double>(_list93.size);
            double _elem94;
            for (int _i95 = 0; _i95 < _list93.size; ++_i95)
            {
              _elem94 = iprot.readDouble();
              _elem91.add(_elem94);
            }
          }
          struct.linkTime.add(_elem91);
        }
      }
      struct.setLinkTimeIsSet(true);
      struct.u = iprot.readDouble();
      struct.setUIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

